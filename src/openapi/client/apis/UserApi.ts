/* tslint:disable */
/* eslint-disable */
/**
 * My App
 * This is an awesome app!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetAppUserdomainPresentationGetmeGetme200Response,
} from '../models/index';
import {
    GetAppUserdomainPresentationGetmeGetme200ResponseFromJSON,
    GetAppUserdomainPresentationGetmeGetme200ResponseToJSON,
} from '../models/index';

export interface PostApiRegisterWithInviteRequest {
    token: string;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     * Returns user info and recent products
     * Get current user info and recent products
     */
    async getAppUserdomainPresentationGetmeGetmeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAppUserdomainPresentationGetmeGetme200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/users/me`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetAppUserdomainPresentationGetmeGetme200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns user info and recent products
     * Get current user info and recent products
     */
    async getAppUserdomainPresentationGetmeGetme(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAppUserdomainPresentationGetmeGetme200Response> {
        const response = await this.getAppUserdomainPresentationGetmeGetmeRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async postApiRegisterWithInviteRaw(requestParameters: PostApiRegisterWithInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling postApiRegisterWithInvite().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/register_with_invite/{token}`;
        urlPath = urlPath.replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postApiRegisterWithInvite(requestParameters: PostApiRegisterWithInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postApiRegisterWithInviteRaw(requestParameters, initOverrides);
    }

}
