/* tslint:disable */
/* eslint-disable */
/**
 * My App
 * This is an awesome app!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner,
  GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200Response,
  GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner,
  PostAppSpecautocontextPresentationSpecautocreateCreateRequest,
} from '../models/index';
import {
    GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerFromJSON,
    GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerToJSON,
    GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200ResponseFromJSON,
    GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200ResponseToJSON,
    GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerFromJSON,
    GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerToJSON,
    PostAppSpecautocontextPresentationSpecautocreateCreateRequestFromJSON,
    PostAppSpecautocontextPresentationSpecautocreateCreateRequestToJSON,
} from '../models/index';

export interface GetAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfiltersRequest {
    brandId: string;
}

export interface GetAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfiltersRequest {
    brand?: string;
    model?: string;
    releaseYear?: number;
    price?: string;
    additionalFilters?: Array<string>;
}

export interface GetAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfiltersRequest {
    advertismentId: string;
}

export interface PostAppMotorbikecontextPresentationMotorbikecreateCreateRequest {
    postAppSpecautocontextPresentationSpecautocreateCreateRequest: PostAppSpecautocontextPresentationSpecautocreateCreateRequest;
}

/**
 * 
 */
export class MotorbikeApi extends runtime.BaseAPI {

    /**
     */
    async getAppMotorbikecontextPresentationBrandgetcollectionGetbrandsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/motorbike/brands`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerFromJSON));
    }

    /**
     */
    async getAppMotorbikecontextPresentationBrandgetcollectionGetbrands(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetAppSimpleautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner>> {
        const response = await this.getAppMotorbikecontextPresentationBrandgetcollectionGetbrandsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfiltersRaw(requestParameters: GetAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfiltersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner>>> {
        if (requestParameters['brandId'] == null) {
            throw new runtime.RequiredError(
                'brandId',
                'Required parameter "brandId" was null or undefined when calling getAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfilters().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/motorbike/brands/{brandId}/models`;
        urlPath = urlPath.replace(`{${"brandId"}}`, encodeURIComponent(String(requestParameters['brandId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInnerFromJSON));
    }

    /**
     */
    async getAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfilters(requestParameters: GetAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfiltersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetAppSpecautocontextPresentationModelgetcollectionGetcollectionbyfilters200ResponseInner>> {
        const response = await this.getAppMotorbikecontextPresentationModelgetcollectionGetcollectionbyfiltersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfiltersRaw(requestParameters: GetAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfiltersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200Response>>> {
        const queryParameters: any = {};

        if (requestParameters['brand'] != null) {
            queryParameters['brand'] = requestParameters['brand'];
        }

        if (requestParameters['model'] != null) {
            queryParameters['model'] = requestParameters['model'];
        }

        if (requestParameters['releaseYear'] != null) {
            queryParameters['releaseYear'] = requestParameters['releaseYear'];
        }

        if (requestParameters['price'] != null) {
            queryParameters['price'] = requestParameters['price'];
        }

        if (requestParameters['additionalFilters'] != null) {
            queryParameters['additionalFilters'] = requestParameters['additionalFilters'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/motorbike/advertisments`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200ResponseFromJSON));
    }

    /**
     */
    async getAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfilters(requestParameters: GetAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfiltersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200Response>> {
        const response = await this.getAppMotorbikecontextPresentationMotorbikegetcollectionGetcollectionbyfiltersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfiltersRaw(requestParameters: GetAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfiltersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200Response>> {
        if (requestParameters['advertismentId'] == null) {
            throw new runtime.RequiredError(
                'advertismentId',
                'Required parameter "advertismentId" was null or undefined when calling getAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfilters().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/motorbike/advertisments/{advertismentId}`;
        urlPath = urlPath.replace(`{${"advertismentId"}}`, encodeURIComponent(String(requestParameters['advertismentId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async getAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfilters(requestParameters: GetAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfiltersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAppSimpleautocontextPresentationSimpleautogetoneGetcollectionbyfilters200Response> {
        const response = await this.getAppMotorbikecontextPresentationMotorbikegetoneGetcollectionbyfiltersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async postAppMotorbikecontextPresentationMotorbikecreateCreateRaw(requestParameters: PostAppMotorbikecontextPresentationMotorbikecreateCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['postAppSpecautocontextPresentationSpecautocreateCreateRequest'] == null) {
            throw new runtime.RequiredError(
                'postAppSpecautocontextPresentationSpecautocreateCreateRequest',
                'Required parameter "postAppSpecautocontextPresentationSpecautocreateCreateRequest" was null or undefined when calling postAppMotorbikecontextPresentationMotorbikecreateCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/motorbike/advertisments`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostAppSpecautocontextPresentationSpecautocreateCreateRequestToJSON(requestParameters['postAppSpecautocontextPresentationSpecautocreateCreateRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postAppMotorbikecontextPresentationMotorbikecreateCreate(requestParameters: PostAppMotorbikecontextPresentationMotorbikecreateCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postAppMotorbikecontextPresentationMotorbikecreateCreateRaw(requestParameters, initOverrides);
    }

}
